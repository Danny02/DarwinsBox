analytic

# Ward 92
# Note: This model didn't have an explicit G; the G is implied by factoring
# out the 1/(N.L * N.V) term.

# variables go here...
# only floats supported right now.
# [type] [name] [min val] [max val] [default val]

::begin parameters
bool includeInvNdotLNdotV 0
::end parameters


# Then comes the shader. This should be GLSL code
# that defines a function called BRDF (although you can
# add whatever else you want too, like sqr() below).

::begin shader


vec3 BRDF( vec3 L, vec3 V, vec3 N, vec3 X, vec3 Y )
{
    float G = pow( dot(N,L) * dot(N,V),
                   includeInvNdotLNdotV ? -0.5 : 0.5 );
    return vec3(G);
}

::end shader
