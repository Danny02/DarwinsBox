analytic

# variables go here...
# only floats supported right now.
# [type] [name] [min val] [max val] [default val]

::begin parameters
float n 1 1000 100
bool divide_by_NdotL 1
::end parameters


# Then comes the shader. This should be GLSL code
# that defines a function called BRDF (although you can
# add whatever else you want too, like sqr() below).

::begin shader

vec3 reflect(vec3 I, vec3 N)
{
    return 2*dot(I,N)*N - I;
}

float sqr( float x )
{
    return x*x;
}


// Phong BRDF

vec3 BRDF( vec3 L, vec3 V, vec3 N, vec3 X, vec3 Y )
{
    vec3 R = reflect(L,N);

    // specular
    float val = pow(max(0, dot(R,V)),n);
    if (divide_by_NdotL)
        val = val / dot(N,L);
    return vec3(val);
}

::end shader
